@inject IToastService toast;

@if (Partido != null)
{
    <div class="gridContainer">
        <div class="vis caja">
            <p>@(Partido.Local != null ? Partido.Local.NombreEquipo : MensajeEsperandoContrincante())</p>
            <img src="@(Partido.Local != null ? ActualizarLinkImagen(Partido.Local.Caratula) : EscudoVacio())" alt="">
        </div>

        <div class="puntV caja tamanioPuntaje">
            <h3>@Partido.PuntajeLocal</h3>
        </div>

        <div class="medio caja">
            <p class="gridContainerFecha">10/01/2023</p>
            <p title="@Partido.HistorialPartido">VS</p>
            <p>00:00</p>
            <p>@Partido.NombreCancha</p>
        </div>

        <div class="puntL caja tamanioPuntaje">
            <h3>@Partido.PuntajeVisitante</h3>
        </div>

        <div class="loc caja">
            <p>@(Partido.Visitante != null ? Partido.Visitante.NombreEquipo : MensajeEsperandoContrincante())</p>
            <img src="@(Partido.Visitante != null ? ActualizarLinkImagen(Partido.Visitante.Caratula) : EscudoVacio())" alt="">
        </div>


        @if (PartidaEnProceso)
        {
           <div class="sep caja">
            <hr>
        </div>

        <div class="marcV caja">
            <a href="#" @onclick="() => AumentarMarcador(Diccionarios.LOCAL)"
                        @onclick:preventDefault>
             <h2>@Partido.MarcadorLocal.ToString("00")</h2>
            </a>
            <p>set: @Partido.SetsGanadosLocal</p>
        </div>

        <div class="medioSet caja">
            <h4>SET: @Partido.SetActual</h4>
        </div>

        <div class="marcL caja">
                <a href="#" @onclick="() => AumentarMarcador(Diccionarios.VISITANTE)"
                            @onclick:preventDefault>
                    <h2 >@Partido.MarcadorVisitante.ToString("00")</h2>
                </a>
            <p>set: @Partido.SetsGanadosVisitante</p>
        </div>

            <div class="pie">
                <p>@Partido.HistorialPartido</p>
            </div>
        }
        @if (!PartidoTerminado)
        {
            <div class="playPartido">
                <a href="" @onclick="ComenzarPartido" @onclick:preventDefault>
                    <img src="/img/componentes/play.png" alt="">
                </a>
            </div>
        }
       
    </div>

    <div style="height:15px;width:auto"></div>
}

@code {
    [Parameter]
    public PartidoVM Partido { get; set; }

    [Parameter]
    public int SetsMax { get; set; }

    [Parameter]
    public int PuntajeMax { get; set; }

    private bool PartidaEnProceso = false;
    private bool PartidoTerminado = false;

    private string ActualizarLinkImagen(string imagenRef)
    {
        return $"https://torneostorage.blob.core.windows.net/imagenesequipos/{imagenRef}";

    }

    private string EscudoVacio() => "/img/componentes/EscudoVacio.png";

    private string MensajeEsperandoContrincante() => "Esperando...";

    private async Task ComenzarPartido()
    {
        if (Partido.Local != null && Partido.Visitante != null)
        {
            PartidaEnProceso = true;
        }
        else
        {
            toast.ShowWarning("Todavia no hay dos equipos para jugar");
        }
    }

    private void AumentarMarcador(string tipoEquipo)
    {
        if (tipoEquipo == "LOCAL")
        {
            Partido.MarcadorLocal += 1;
        }
        else
        {
            Partido.MarcadorVisitante += 1;
        }
        VerificarFinalSet();
    }

    private void ResetearMarcador()
    {
        Partido.MarcadorLocal = 0;
        Partido.MarcadorVisitante = 0;
        Partido.SetActual += 1;
    }

    private void VerificarFinalSet()
    {
        if (Partido.MarcadorLocal >= PuntajeMax)
        {
            Partido.SetsGanadosLocal += 1;
            Partido.HistorialPartido += $"{Partido.MarcadorLocal} / {Partido.MarcadorVisitante} - ";
            ResetearMarcador();
        }
        if (Partido.MarcadorVisitante >= PuntajeMax)
        {
            Partido.SetsGanadosVisitante += 1;
            Partido.HistorialPartido += $"{Partido.MarcadorLocal} / {Partido.MarcadorVisitante} - ";
            ResetearMarcador();
        }
        VerificarFinalPartido();
    }

    private void VerificarFinalPartido()
    {
        if (Partido.SetActual > SetsMax)
        {
            if (Partido.SetsGanadosLocal > Partido.SetsGanadosVisitante)
            {
                Partido.PuntajeLocal = 1;
            }
            else
            {
                Partido.PuntajeVisitante = 1;
            }
            PartidaEnProceso = false;
            PartidoTerminado = true;
            //contemplar si empatan . Ver que se puede hacer
        }
    }

    private void IncrementarMarcador(string tipoEquipo)
    {
        if (tipoEquipo == "LOCAL" && Partido.MarcadorLocal > 0)
        {
            Partido.MarcadorLocal -= 1;
        }
        else if (Partido.MarcadorVisitante > 0)
        {
            Partido.MarcadorVisitante -= 1;
        }
        
    }
}
